#include <iostream>
#include <cmath>
using namespace std;

class Shape {
private:
    string color;

protected:
    double area;

public:
    void setColor(string c) {
        color = c;
    }

    string getColor() {
        return color;
    }

    virtual void calculateArea() = 0; // Pure virtual for abstraction
};

class Circle : public Shape {
private:
    double radius;

public:
    Circle(double r) : radius(r) {}

    void calculateArea() override {
        area = M_PI * radius * radius;
        cout << "Circle Area: " << area << endl;
    }
};

class Rectangle : public Shape {
private:
    double length, width;

public:
    Rectangle(double l, double w) : length(l), width(w) {}

    void calculateArea() override {
        area = length * width;
        cout << "Rectangle Area: " << area << endl;
    }
};

int main() {
    Circle c(5.0);
    c.setColor("Red");
    c.calculateArea();

    Rectangle r(4.0, 6.0);
    r.setColor("Blue");
    r.calculateArea();

    return 0;
}


"""
Circle Area: 78.5398
Rectangle Area: 24
"""
